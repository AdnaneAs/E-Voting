/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  VoterRegistry,
  VoterRegistryInterface,
} from "../../../src/contracts/VoterRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "ContractAuthorized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "ContractDeauthorized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voterAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cin",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "fullName",
        type: "string",
      },
    ],
    name: "VoterRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voterAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasVoted",
        type: "bool",
      },
    ],
    name: "VoterStatusUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "authorizeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedContracts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "deauthorizeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voterAddress",
        type: "address",
      },
    ],
    name: "getVoterDetails",
    outputs: [
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "hasVoted",
        type: "bool",
      },
      {
        internalType: "string",
        name: "cin",
        type: "string",
      },
      {
        internalType: "string",
        name: "fullName",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voterAddress",
        type: "address",
      },
    ],
    name: "hasVoterVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voterAddress",
        type: "address",
      },
    ],
    name: "isVoterRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voterAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_cin",
        type: "string",
      },
      {
        internalType: "string",
        name: "_fullName",
        type: "string",
      },
    ],
    name: "registerVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVoters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voterAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_hasVoted",
        type: "bool",
      },
    ],
    name: "updateVoterStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "hasVoted",
        type: "bool",
      },
      {
        internalType: "string",
        name: "cin",
        type: "string",
      },
      {
        internalType: "string",
        name: "fullName",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361002c565b6000805460ff60a01b1916905561007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111058061008b6000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638da5cb5b11610097578063d5b9221b11610066578063d5b9221b146101f5578063eb2119db14610218578063f2fde38b1461022b578063fd11f97a1461023e57600080fd5b80638da5cb5b14610191578063a3ec138d146101ac578063ba71bef0146101cf578063bb8fab8e146101e257600080fd5b806367561d93116100d357806367561d931461015b5780636e861c0e1461016e578063715018a6146101815780638456cb591461018957600080fd5b80626bc772146101045780633f4ba83a146101195780635c975abb146101215780635f5300ff14610144575b600080fd5b610117610112366004610d36565b61026f565b005b6101176103ab565b600054600160a01b900460ff165b60405190151581526020015b60405180910390f35b61014d60035481565b60405190815260200161013b565b610117610169366004610d72565b6103bd565b61011761017c366004610d72565b610411565b610117610462565b610117610474565b6000546040516001600160a01b03909116815260200161013b565b6101bf6101ba366004610d72565b610484565b60405161013b9493929190610dda565b6101bf6101dd366004610d72565b6105c5565b6101176101f0366004610ebd565b610759565b61012f610203366004610d72565b60026020526000908152604090205460ff1681565b61012f610226366004610d72565b610951565b610117610239366004610d72565b610ac2565b61012f61024c366004610d72565b6001600160a01b0316600090815260016020526040902054610100900460ff1690565b6000546001600160a01b031633148061029757503360009081526002602052604090205460ff165b6102d95760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6102e1610b3b565b6001600160a01b03821660009081526001602052604090205460ff166103405760405162461bcd60e51b8152602060048201526014602482015273159bdd195c881b9bdd081c9959da5cdd195c995960621b60448201526064016102d0565b6001600160a01b0382166000818152600160205260409081902080548415156101000261ff0019909116179055517f930092ace8157b2101bc333d8c3951d9a4cf5cb98ec4890e25b6b5ae155f080b9061039f90841515815260200190565b60405180910390a25050565b6103b3610b88565b6103bb610be2565b565b6103c5610b88565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517f8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff6519190a250565b610419610b88565b6001600160a01b038116600081815260026020526040808220805460ff19169055517f54142b7cb3ceaa9e564243ce4cc2303723c842a1144192de6b3c594f68b16a9a9190a250565b61046a610b88565b6103bb6000610c37565b61047c610b88565b6103bb610c87565b60016020819052600091825260409091208054918101805460ff808516946101009004169291906104b490610f31565b80601f01602080910402602001604051908101604052809291908181526020018280546104e090610f31565b801561052d5780601f106105025761010080835404028352916020019161052d565b820191906000526020600020905b81548152906001019060200180831161051057829003601f168201915b50505050509080600201805461054290610f31565b80601f016020809104026020016040519081016040528092919081815260200182805461056e90610f31565b80156105bb5780601f10610590576101008083540402835291602001916105bb565b820191906000526020600020905b81548152906001019060200180831161059e57829003601f168201915b5050505050905084565b6001600160a01b03811660009081526001602081815260408084208151608081018352815460ff808216151583526101009091041615159381019390935292830180548594606094859487949193908401919061062190610f31565b80601f016020809104026020016040519081016040528092919081815260200182805461064d90610f31565b801561069a5780601f1061066f5761010080835404028352916020019161069a565b820191906000526020600020905b81548152906001019060200180831161067d57829003601f168201915b505050505081526020016002820180546106b390610f31565b80601f01602080910402602001604051908101604052809291908181526020018280546106df90610f31565b801561072c5780601f106107015761010080835404028352916020019161072c565b820191906000526020600020905b81548152906001019060200180831161070f57829003601f168201915b505050919092525050815160208301516040840151606090940151919a9099509297509550909350505050565b610761610b88565b610769610b3b565b6001600160a01b03831660009081526001602052604090205460ff16156107d25760405162461bcd60e51b815260206004820152601860248201527f566f74657220616c72656164792072656769737465726564000000000000000060448201526064016102d0565b60008251116108195760405162461bcd60e51b815260206004820152601360248201527243494e2063616e6e6f7420626520656d70747960681b60448201526064016102d0565b600081511161086a5760405162461bcd60e51b815260206004820152601960248201527f46756c6c206e616d652063616e6e6f7420626520656d7074790000000000000060448201526064016102d0565b60408051608081018252600180825260006020808401828152848601888152606086018890526001600160a01b038a168452918490529490912083518154955161ffff1990961690151561ff001916176101009515159590950294909417845551919291908201906108dc9082610fba565b50606082015160028201906108f19082610fba565b505060038054915060006109048361107a565b9190505550826001600160a01b03167f96ac7a421360a2bd773d747b2f64b40a916821c4906dbfdebf787c292e741f7d83836040516109449291906110a1565b60405180910390a2505050565b6001600160a01b03811660009081526001602081815260408084208151608081018352815460ff80821615158352610100909104161515938101939093529283018054859492840191906109a490610f31565b80601f01602080910402602001604051908101604052809291908181526020018280546109d090610f31565b8015610a1d5780601f106109f257610100808354040283529160200191610a1d565b820191906000526020600020905b815481529060010190602001808311610a0057829003601f168201915b50505050508152602001600282018054610a3690610f31565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6290610f31565b8015610aaf5780601f10610a8457610100808354040283529160200191610aaf565b820191906000526020600020905b815481529060010190602001808311610a9257829003601f168201915b5050509190925250509051949350505050565b610aca610b88565b6001600160a01b038116610b2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d0565b610b3881610c37565b50565b600054600160a01b900460ff16156103bb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102d0565b6000546001600160a01b031633146103bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d0565b610bea610cca565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c8f610b3b565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c1a3390565b600054600160a01b900460ff166103bb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102d0565b80356001600160a01b0381168114610d3157600080fd5b919050565b60008060408385031215610d4957600080fd5b610d5283610d1a565b915060208301358015158114610d6757600080fd5b809150509250929050565b600060208284031215610d8457600080fd5b610d8d82610d1a565b9392505050565b6000815180845260005b81811015610dba57602081850181015186830182015201610d9e565b506000602082860101526020601f19601f83011685010191505092915050565b84151581528315156020820152608060408201526000610dfd6080830185610d94565b8281036060840152610e0f8185610d94565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e4157600080fd5b813567ffffffffffffffff80821115610e5c57610e5c610e1a565b604051601f8301601f19908116603f01168101908282118183101715610e8457610e84610e1a565b81604052838152866020858801011115610e9d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610ed257600080fd5b610edb84610d1a565b9250602084013567ffffffffffffffff80821115610ef857600080fd5b610f0487838801610e30565b93506040860135915080821115610f1a57600080fd5b50610f2786828701610e30565b9150509250925092565b600181811c90821680610f4557607f821691505b602082108103610f6557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610fb557600081815260208120601f850160051c81016020861015610f925750805b601f850160051c820191505b81811015610fb157828155600101610f9e565b5050505b505050565b815167ffffffffffffffff811115610fd457610fd4610e1a565b610fe881610fe28454610f31565b84610f6b565b602080601f83116001811461101d57600084156110055750858301515b600019600386901b1c1916600185901b178555610fb1565b600085815260208120601f198616915b8281101561104c5788860151825594840194600190910190840161102d565b508582101561106a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001820161109a57634e487b7160e01b600052601160045260246000fd5b5060010190565b6040815260006110b46040830185610d94565b82810360208401526110c68185610d94565b9594505050505056fea264697066735822122060e0e0a3ae90b0e0e7b970f3c7edef83dda158431b92eac667fcd6d7b113447564736f6c63430008130033";

type VoterRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoterRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VoterRegistry__factory extends ContractFactory {
  constructor(...args: VoterRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VoterRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VoterRegistry__factory {
    return super.connect(runner) as VoterRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoterRegistryInterface {
    return new Interface(_abi) as VoterRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VoterRegistry {
    return new Contract(address, _abi, runner) as unknown as VoterRegistry;
  }
}
